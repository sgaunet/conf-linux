---

- name: Check kubectl version
  shell: 'kubectl version --client=true | sed "s#Client Version: version.Info##g"'
  register: kubectl_version_client_installed
  changed_when: false
  failed_when: false

# - name: GitVersion
#   debug:
#     msg: "{{kubectl_version_client_installed.stdout | regex_search('GitVersion:\\\"(.+)\\\", GitCommit(.*)$','\\1') }}"

- name: GitVersion
  set_fact:
    kubectl_version_installed: "{{kubectl_version_client_installed.stdout | regex_search('GitVersion:\\\"(.+)\\\", GitCommit(.*)$','\\1') }}"

# - name: GitVersion
#   debug:
#     msg: "{{ kubectl_version_installed }}"


- name: Download and unarchive kubectl
  unarchive:
    src: "https://storage.googleapis.com/kubernetes-release/release/v{{ kubectl_version }}/kubernetes-client-{{ kubectl_os }}-{{ kubectl_arch }}.tar.gz"
    dest: "{{ kubectl_bin_path }}"
    remote_src: true
    mode: 0755
    extra_opts:
      - --strip=1
      - --wildcards
      - '*/kubectl'
  when:
    - kubectl_version != kubectl_version_installed

- name: Add aliases to $HOME/.bashrc
  become: false
  lineinfile:
    path: "{{ lookup('env','HOME') }}/.bashrc"
    line: "alias k=kubectl"

- name: Register kubectl completion bash
  shell: 'kubectl completion bash'
  register: kubectl_completion
  changed_when: false

# - debug:
#     msg: "{{ kubectl_completion }}"

- name: Create completion bash file
  copy:
    content: "{{ kubectl_completion.stdout }}"
    dest: /etc/bash_completion.d/kubectl
    owner: root
    group: root
    mode: '0755'