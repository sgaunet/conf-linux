---

- name: Check gocontainerregistry version
  become: false
  ansible.builtin.shell: "set -o pipefail && crane version  | cut -d' ' -f2"
  args:
    executable: /bin/bash
  register: gocontainerregistry_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check gocontainerregistry version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: gocontainerregistry_version_client_installed.stdout != gocontainerregistry_version
  check_mode: false

# - debug:
#     var: gocontainerregistry_version_client_installed.stdout

- name: Install gocontainerregistry
  when:
    - not ansible_check_mode
    - gocontainerregistry_version != gocontainerregistry_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ gocontainerregistry_tmp_directory }}/{{ gocontainerregistry_os }}-{{ gocontainerregistry_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive gocontainerregistry
      ansible.builtin.unarchive:
        src: "https://github.com/google/go-containerregistry/releases/download/v{{ gocontainerregistry_version }}/go-containerregistry_{{ gocontainerregistry_os }}_{{ gocontainerregistry_arch }}.tar.gz"
        dest: "{{ gocontainerregistry_tmp_directory }}/{{ gocontainerregistry_os }}-{{ gocontainerregistry_arch }}/"
        remote_src: true
        mode: "0755"

    - name: install crane
      ansible.builtin.copy:
        src: "{{ gocontainerregistry_tmp_directory }}/{{ gocontainerregistry_os }}-{{ gocontainerregistry_arch }}/crane"
        dest: "{{ gocontainerregistry_bin_path }}/crane"
        mode: '0755'
        remote_src: true

    - name: install gcrane
      ansible.builtin.copy:
        src: "{{ gocontainerregistry_tmp_directory }}/{{ gocontainerregistry_os }}-{{ gocontainerregistry_arch }}/gcrane"
        dest: "{{ gocontainerregistry_bin_path }}/gcrane"
        mode: '0755'
        remote_src: true

    - name: install krane
      ansible.builtin.copy:
        src: "{{ gocontainerregistry_tmp_directory }}/{{ gocontainerregistry_os }}-{{ gocontainerregistry_arch }}/krane"
        dest: "{{ gocontainerregistry_bin_path }}/krane"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ gocontainerregistry_tmp_directory }}/{{ gocontainerregistry_os }}-{{ gocontainerregistry_arch }}"
