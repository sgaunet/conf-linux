---

- name: Check pgmetrics version
  shell: "pgmetrics -V | sed 's/pgmetrics //g'"
  register: pgmetrics_version_installed
  changed_when: false
  failed_when: false
  check_mode: no

- name: Check pgmetrics version
  shell: '/bin/true'
  changed_when: pgmetrics_version_installed.stdout != pgmetrics_version
  check_mode: no

- name: Install pgmetrics
  block:
    - name: Create a directory if it does not exist
      file:
        path: "{{ pgmetrics_tmp_directory }}/{{ pgmetrics_os }}-{{ pgmetrics_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive pgmetrics
      unarchive:
        src: "https://github.com/rapidloop/pgmetrics/releases/download/v{{ pgmetrics_version }}/pgmetrics_{{ pgmetrics_version }}_{{ pgmetrics_os }}_{{ pgmetrics_arch }}.tar.gz"
        dest: "{{ pgmetrics_tmp_directory }}/{{ pgmetrics_os }}-{{ pgmetrics_arch }}/"
        remote_src: true
        mode: 0755

    - name: Copy file with owner and permissions
      copy:
        src: "{{ pgmetrics_tmp_directory }}/{{ pgmetrics_os }}-{{ pgmetrics_arch }}/pgmetrics_{{ pgmetrics_version }}_{{ pgmetrics_os }}_{{ pgmetrics_arch }}/pgmetrics"
        dest: "{{ pgmetrics_bin_path }}/pgmetrics"
        mode: '0755'
        remote_src: yes

    - name: Clean temporary directory
      file:
        state: absent
        path: "{{ pgmetrics_tmp_directory }}/{{ pgmetrics_os }}-{{ pgmetrics_arch }}"
  when: 
    - not ansible_check_mode
    - pgmetrics_version != pgmetrics_version_installed.stdout

