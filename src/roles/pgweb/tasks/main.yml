---

- name: Check pgweb version
  become: false
  ansible.builtin.shell: "set -o pipefail && pgweb --version | awk '{ print $2 }'  | sed 's/v//g'"
  args:
    executable: /bin/bash
  register: pgweb_version_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check pgweb version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: pgweb_version_installed.stdout != pgweb_version
  check_mode: false

- name: Install pgweb
  when:
    - not ansible_check_mode
    - pgweb_version_installed.stdout != pgweb_version
  block:
    - name: Create temporary directory
      ansible.builtin.file:
        path: "{{ pgweb_tmp_directory }}/{{ pgweb_os }}-{{ pgweb_arch }}"
        state: directory
        mode: "0755"

    - name: Download and unarchive pgweb
      ansible.builtin.unarchive:
        src: "https://github.com/sosedoff/pgweb/releases/download/v{{ pgweb_version }}/pgweb_{{ pgweb_os }}_{{ pgweb_arch }}.zip"
        dest: "{{ pgweb_tmp_directory }}/{{ pgweb_os }}-{{ pgweb_arch }}"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ pgweb_tmp_directory }}/{{ pgweb_os }}-{{ pgweb_arch }}/pgweb_{{ pgweb_os }}_{{ pgweb_arch }}"
        dest: "{{ pgweb_bin_path }}/pgweb"
        mode: '0755'
        remote_src: true

    - name: Remove temporary files/folders
      ansible.builtin.file:
        path: "{{ pgweb_tmp_directory }}/{{ pgweb_os }}-{{ pgweb_arch }}"
        state: absent
