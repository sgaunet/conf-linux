---

- name: Get d2 version
  become: false
  ansible.builtin.shell: 'set -o pipefail && d2 -v | sed "s#v##g"'
  args:
    executable: /bin/bash
  register: d2_version_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check d2 version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: d2_version_installed.stdout != d2_version
  check_mode: false

- name: Install d2
  when:
    - not ansible_check_mode
    - d2_version != d2_version_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ d2_tmp_directory }}/{{ d2_os }}-{{ d2_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive d2
      ansible.builtin.unarchive:
        src: "https://github.com/terrastruct/d2/releases/download/v{{ d2_version }}/d2-v{{ d2_version }}-{{ d2_os }}-{{ d2_arch }}.tar.gz"
        dest: "{{ d2_tmp_directory }}/{{ d2_os }}-{{ d2_arch }}/"
        remote_src: true
        mode: 0755

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ d2_tmp_directory }}/{{ d2_os }}-{{ d2_arch }}/d2-v{{ d2_version }}/bin/d2"
        dest: "{{ d2_bin_path }}/d2"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ d2_tmp_directory }}/{{ d2_os }}-{{ d2_arch }}"
