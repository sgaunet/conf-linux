---

- name: Check dog version
  become: false
  ansible.builtin.shell: 'set -o pipefail && dog --version | sed "s#dog ##g"'
  args:
    executable: /bin/bash
  register: dog_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check dog version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: dog_version_client_installed.stdout != dog_version
  check_mode: false

- name: Install dog
  when:
    - not ansible_check_mode
    - dog_version != dog_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ dog_tmp_directory }}/{{ dog_os }}-{{ dog_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive dog
      ansible.builtin.unarchive:
        src: "https://github.com/ogham/dog/releases/download/v{{ dog_version }}/dog-v{{ dog_version }}-{{ dog_arch }}-{{ dog_os }}.zip"
        dest: "{{ dog_tmp_directory }}/{{ dog_os }}-{{ dog_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ dog_tmp_directory }}/{{ dog_os }}-{{ dog_arch }}/bin/dog"
        dest: "{{ dog_bin_path }}/dog"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ dog_tmp_directory }}/{{ dog_os }}-{{ dog_arch }}"
