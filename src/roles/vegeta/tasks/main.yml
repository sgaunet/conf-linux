---

- name: Get vegeta version
  become: false
  ansible.builtin.shell: "set -o pipefail && vegeta -version | grep Version | sed 's#Version: ##'"
  args:
    executable: /bin/bash
  register: vegeta_version_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check vegeta version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: vegeta_version_installed.stdout != vegeta_version
  check_mode: false

- name: Install vegeta
  when:
    - not ansible_check_mode
    - vegeta_version_installed.stdout != vegeta_version
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ vegeta_tmp_directory }}/{{ vegeta_os }}-{{ vegeta_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive vegeta
      ansible.builtin.unarchive:
        src: "https://github.com/tsenart/vegeta/releases/download/v{{ vegeta_version }}/vegeta-{{ vegeta_version }}-{{ vegeta_os }}-{{ vegeta_arch }}.tar.gz"
        dest: "{{ vegeta_tmp_directory }}/{{ vegeta_os }}-{{ vegeta_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ vegeta_tmp_directory }}/{{ vegeta_os }}-{{ vegeta_arch }}/vegeta"
        dest: "{{ vegeta_bin_path }}/vegeta"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ vegeta_tmp_directory }}/{{ vegeta_os }}-{{ vegeta_arch }}"
