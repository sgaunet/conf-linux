---

- name: Check awscli version
  become: false
  ansible.builtin.shell: "set -o pipefail && aws --version | sed 's# Python.*##g' | sed 's#aws-cli/##g'"
  args:
    executable: /bin/bash
  register: awscli_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check awscli version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: awscli_version_client_installed.stdout != awscli_version
  check_mode: false

- name: Check if awscli already installed
  become: false
  ansible.builtin.stat:
    path: "/usr/local/aws-cli/v2/current"
  delegate_to: localhost
  register: link_awscli

- name: Download awscliv2.zip
  ansible.builtin.get_url:
    url: https://awscli.amazonaws.com/awscli-exe-{{ awscli_os }}-{{ awscli_arch }}-{{ awscli_version }}.zip
    dest: /tmp/awscliv2.zip
    mode: '0750'
  when: awscli_version_client_installed.stdout != awscli_version

- name: Create temporary folder /tmp/awscli
  ansible.builtin.file:
    path: /tmp/awscli
    state: directory
    mode: "0755"
  when:
    - not ansible_check_mode
    - awscli_version_client_installed.stdout != awscli_version

- name: Extract to /tmp/awscli
  ansible.builtin.unarchive:
    src: /tmp/awscliv2.zip
    dest: /tmp/awscli
    remote_src: true
  when:
    - not ansible_check_mode
    - awscli_version_client_installed.stdout != awscli_version

- name: Install awscli
  ansible.builtin.command: /tmp/awscli/aws/install
  changed_when: true
  when: not link_awscli.stat.exists

- name: Update awscli
  ansible.builtin.command: /tmp/awscli/aws/install --update
  changed_when: true
  when: awscli_version_client_installed.stdout != awscli_version

- name: Remove temporary files/folders
  ansible.builtin.file:
    path: /tmp/awscli
    state: absent
  when: not ansible_check_mode

- name: Remove temporary files/folders
  ansible.builtin.file:
    path: /tmp/awscliv2.zip
    state: absent
  when: not ansible_check_mode
