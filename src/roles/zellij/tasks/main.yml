---

- name: Get zellij version
  become: false
  ansible.builtin.shell: 'set -o pipefail && zellij --version | sed "s#zellij ##g"'
  args:
    executable: /bin/bash
  register: zellij_version_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check zellij version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: zellij_version_installed.stdout != zellij_version
  check_mode: false

- name: Install zellij
  when:
    - not ansible_check_mode
    - zellij_version != zellij_version_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ zellij_tmp_directory }}/{{ zellij_os }}-{{ zellij_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive zellij
      ansible.builtin.unarchive:
        src: "https://github.com/zellij-org/zellij/releases/download/v{{ zellij_version }}/zellij-{{ zellij_arch }}-{{ zellij_os }}.tar.gz"
        dest: "{{ zellij_tmp_directory }}/{{ zellij_os }}-{{ zellij_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ zellij_tmp_directory }}/{{ zellij_os }}-{{ zellij_arch }}/zellij"
        dest: "{{ zellij_bin_path }}/zellij"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ zellij_tmp_directory }}/{{ zellij_os }}-{{ zellij_arch }}"
