---

- name: Check goreleaser version
  become: false
  ansible.builtin.shell: "set -o pipefail && goreleaser -v | grep GitVersion | awk '{ print $2 }'"
  args:
    executable: /bin/bash
  register: goreleaser_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check goreleaser version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: goreleaser_version_client_installed.stdout != goreleaser_version
  check_mode: false

- name: Install goreleaser
  when:
    - not ansible_check_mode
    - goreleaser_version != goreleaser_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ goreleaser_tmp_directory }}/{{ goreleaser_os }}-{{ goreleaser_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive goreleaser
      ansible.builtin.unarchive:
        src: "https://github.com/goreleaser/goreleaser/releases/download/v{{ goreleaser_version }}/goreleaser_{{ goreleaser_os }}_{{ goreleaser_arch }}.tar.gz"
        dest: "{{ goreleaser_tmp_directory }}/{{ goreleaser_os }}-{{ goreleaser_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ goreleaser_tmp_directory }}/{{ goreleaser_os }}-{{ goreleaser_arch }}/goreleaser"
        dest: "{{ goreleaser_bin_path }}/goreleaser"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ goreleaser_tmp_directory }}/{{ goreleaser_os }}-{{ goreleaser_arch }}"
