---

- name: Check goreleaser version
  shell: 'goreleaser -v | grep version | sed "s#goreleaser version ##g"'
  register: goreleaser_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: no

- name: Create a directory if it does not exist
  file:
    path: "{{ goreleaser_tmp_directory }}/{{ goreleaser_os }}-{{ goreleaser_arch }}/"
    state: directory
    mode: '0755'
  when: 
    - not ansible_check_mode
    - goreleaser_version != goreleaser_version_client_installed.stdout


- name: Download and unarchive goreleaser
  unarchive:
    src: "https://github.com/goreleaser/goreleaser/releases/download/v{{ goreleaser_version }}/goreleaser_{{ goreleaser_os }}_{{ goreleaser_arch }}.tar.gz"
    dest: "{{ goreleaser_tmp_directory }}/{{ goreleaser_os }}-{{ goreleaser_arch }}/"
    remote_src: true
    mode: 0755
  when: 
    - not ansible_check_mode
    - goreleaser_version != goreleaser_version_client_installed.stdout


- name: Copy file with owner and permissions
  copy:
    src: "{{ goreleaser_tmp_directory }}/{{ goreleaser_os }}-{{ goreleaser_arch }}/goreleaser"
    dest: "{{ goreleaser_bin_path }}/goreleaser"
    mode: '0755'
    remote_src: yes
  when: 
    - not ansible_check_mode
    - goreleaser_version != goreleaser_version_client_installed.stdout

- name: Clean temporary directory
  file:
    state: absent
    path: "{{ goreleaser_tmp_directory }}/{{ goreleaser_os }}-{{ goreleaser_arch }}"
  when: goreleaser_version != goreleaser_version_client_installed.stdout
