---

- name: Install zsh
  apt:
    name: ['zsh']
    state: present
    update_cache: yes

- name: Check if $HOME/.oh-my-zsh
  become: false
  stat: 
    path: "{{ lookup('env','HOME') }}/.oh-my-zsh"
  delegate_to: localhost
  register: ohmyzsh

- name: Install ohmyzsh
  become: false
  shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  when: ohmyzsh.stat.exists == false

- name: Configure .bashrc to exec zsh
  become: false
  blockinfile:
    path: "{{ lookup('env','HOME') }}/.bashrc"
    block: |
      if [ -t 1 ]; then
        exec zsh
      fi

- name: Configure .zshrc
  become: false
  blockinfile:
    path: "{{ lookup('env','HOME') }}/.zshrc"
    block: |
      if [ -t 1 ]; then
        exec zsh
      fi

- name: Add to $HOME/.zshrc
  become: false
  lineinfile:
    path: "{{ lookup('env','HOME') }}/.zshrc"
    line: "{{ item }}"
  with_items:
   - 'export PATH="$HOME/.bin:$PATH"'

- name: Replace theme ZSH
  replace:
    path: "{{ lookup('env','HOME') }}/.zshrc"
    regexp: 'ZSH_THEME=.*'
    replace: "ZSH_THEME=\"agnoster\""


# - name: Configure .zshrc
#   become: false
#   blockinfile:
#     path: "{{ lookup('env','HOME') }}/.zshrc"
#     block: |
#       prompt_docker_host() {
#         ctx=$(docker context ls | awk '($2=="*") { print $1 }')
#         ctx=$(jq -r .currentContext ~/.docker/config.json )
#         if [ "$ctx" != "null" ]
#         then
#           prompt_segment red default "\xF0\x9F\x90\xB3: '$ctx'"
#         fi
#       }

#       prompt_context(){
#         prompt_docker_host
#       }
