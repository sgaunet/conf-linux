---

- name: Check sqlc version
  become: false
  ansible.builtin.shell: 'set -o pipefail && sqlc version | sed "s#^v##g" '
  args:
    executable: /bin/bash
  register: sqlc_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check sqlc version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: sqlc_version_client_installed.stdout != sqlc_version
  check_mode: false

- name: Install sqlc
  when:
    - not ansible_check_mode
    - sqlc_version != sqlc_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ sqlc_tmp_directory }}/{{ sqlc_os }}-{{ sqlc_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive sqlc
      ansible.builtin.unarchive:
        src: "https://github.com/sqlc-dev/sqlc/releases/download/v{{ sqlc_version }}/sqlc_{{ sqlc_version }}_{{ sqlc_os }}_{{ sqlc_arch }}.tar.gz"
        dest: "{{ sqlc_tmp_directory }}/{{ sqlc_os }}-{{ sqlc_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ sqlc_tmp_directory }}/{{ sqlc_os }}-{{ sqlc_arch }}/sqlc"
        dest: "{{ sqlc_bin_path }}/sqlc"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ sqlc_tmp_directory }}/{{ sqlc_os }}-{{ sqlc_arch }}"
