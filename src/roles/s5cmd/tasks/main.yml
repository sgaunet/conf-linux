---

- name: Check s5cmd version
  shell: "s5cmd version  | sed  's/-[[:alnum:]]*$//g' | sed 's#^v##g'"
  register: s5cmd_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: no

- name: Check s5cmd version
  shell: '/bin/true'
  changed_when: s5cmd_version_client_installed.stdout != s5cmd_version
  check_mode: no

- debug:
    var: s5cmd_version_client_installed.stdout

- name: Install s5cmd
  block:
    - name: Create a directory if it does not exist
      file:
        path: "{{ s5cmd_tmp_directory }}/{{ s5cmd_os }}-{{ s5cmd_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive s5cmd
      unarchive:
        src: "https://github.com/peak/s5cmd/releases/download/v{{ s5cmd_version }}/s5cmd_{{ s5cmd_version }}_{{ s5cmd_os }}-{{ s5cmd_arch }}.tar.gz"
        dest: "{{ s5cmd_tmp_directory }}/{{ s5cmd_os }}-{{ s5cmd_arch }}/"
        remote_src: true
        mode: 0755

    - name: Copy file with owner and permissions
      copy:
        src: "{{ s5cmd_tmp_directory }}/{{ s5cmd_os }}-{{ s5cmd_arch }}/s5cmd"
        dest: "{{ s5cmd_bin_path }}/s5cmd"
        mode: '0755'
        remote_src: yes

    - name: Clean temporary directory
      file:
        state: absent
        path: "{{ s5cmd_tmp_directory }}/{{ s5cmd_os }}-{{ s5cmd_arch }}"
  when: 
    - not ansible_check_mode
    - s5cmd_version != s5cmd_version_client_installed.stdout
