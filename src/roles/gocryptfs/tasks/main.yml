---

- name: Check gocryptfs version
  become: false
  ansible.builtin.shell: 'set -o pipefail && gocryptfs -version | cut -f2 -d " " | sed "s#v##g"'
  args:
    executable: /bin/bash
  register: gocryptfs_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check gocryptfs version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: gocryptfs_version_client_installed.stdout != gocryptfs_version
  check_mode: false

- name: Install gocryptfs
  when:
    - not ansible_check_mode
    - gocryptfs_version != gocryptfs_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ gocryptfs_tmp_directory }}/{{ gocryptfs_os }}-{{ gocryptfs_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive gocryptfs
      ansible.builtin.unarchive:
        src: "https://github.com/rfjakob/gocryptfs/releases/download/v{{ gocryptfs_version }}/gocryptfs_v{{ gocryptfs_version }}_{{ gocryptfs_os }}-static_{{ gocryptfs_arch }}.tar.gz"
        # src: "https://github.com/rfjakob/gocryptfs/releases/download/v2.4.0/gocryptfs_v2.4.0_linux-static_amd64.tar.gz"
        dest: "{{ gocryptfs_tmp_directory }}/{{ gocryptfs_os }}-{{ gocryptfs_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ gocryptfs_tmp_directory }}/{{ gocryptfs_os }}-{{ gocryptfs_arch }}/gocryptfs"
        dest: "{{ gocryptfs_bin_path }}/gocryptfs"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ gocryptfs_tmp_directory }}/{{ gocryptfs_os }}-{{ gocryptfs_arch }}"
