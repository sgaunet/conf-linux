---

- name: Check rclone version
  become: false
  ansible.builtin.shell: "set -o pipefail && rclone --version | grep rclone | sed  's/rclone v//g'"
  args:
    executable: /bin/bash
  register: rclone_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check rclone version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: rclone_version_client_installed.stdout != rclone_version
  check_mode: false

# - debug:
#     var: rclone_version_client_installed.stdout

- name: Install rclone
  when:
    - not ansible_check_mode
    - rclone_version != rclone_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ rclone_tmp_directory }}/{{ rclone_os }}-{{ rclone_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive rclone
      ansible.builtin.unarchive:
        src: "https://downloads.rclone.org/v{{ rclone_version }}/rclone-v{{ rclone_version }}-{{ rclone_os }}-{{ rclone_arch }}.zip"
        dest: "{{ rclone_tmp_directory }}/{{ rclone_os }}-{{ rclone_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ rclone_tmp_directory }}/{{ rclone_os }}-{{ rclone_arch }}/rclone-v{{ rclone_version }}-{{ rclone_os }}-{{ rclone_arch }}/rclone"
        dest: "{{ rclone_bin_path }}/rclone"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ rclone_tmp_directory }}/{{ rclone_os }}-{{ rclone_arch }}"
