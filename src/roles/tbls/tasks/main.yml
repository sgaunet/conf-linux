---

- name: Check tbls version
  become: false
  ansible.builtin.shell: "set -o pipefail && tbls version"
  args:
    executable: /bin/bash
  register: tbls_version_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check tbls version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: tbls_version_installed.stdout != tbls_version
  check_mode: false

- name: Install tbls
  block:
    - name: Create temporary directory
      ansible.builtin.file:
        path: "{{ tbls_tmp_directory }}/{{ tbls_os }}-{{ tbls_arch }}"
        state: directory
        mode: "0755"
        
    - name: Download and unarchive tbls
      ansible.builtin.unarchive:
        src: "https://github.com/k1LoW/tbls/releases/download/v{{ tbls_version }}/tbls_v{{ tbls_version }}_{{ tbls_os }}_{{ tbls_arch }}.tar.gz"
        dest: "{{ tbls_tmp_directory }}/{{ tbls_os }}-{{ tbls_arch }}"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ tbls_tmp_directory }}/{{ tbls_os }}-{{ tbls_arch }}/tbls"
        dest: "{{ tbls_bin_path }}/tbls"
        mode: '0755'
        remote_src: true

    - name: Remove temporary files/folders
      ansible.builtin.file:
        path: "{{ tbls_tmp_directory }}/{{ tbls_os }}-{{ tbls_arch }}"
        state: absent
  when:
    - not ansible_check_mode
    - tbls_version_installed.stdout != tbls_version