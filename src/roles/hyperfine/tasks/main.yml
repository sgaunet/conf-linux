---

- name: Check hyperfine version
  become: false
  ansible.builtin.shell: 'set -o pipefail && hyperfine --version | sed "s#hyperfine ##g"'
  args:
    executable: /bin/bash
  register: hyperfine_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check hyperfine version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: hyperfine_version_client_installed.stdout != hyperfine_version
  check_mode: false

- name: Install hyperfine
  when:
    - not ansible_check_mode
    - hyperfine_version != hyperfine_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ hyperfine_tmp_directory }}/{{ hyperfine_os }}-{{ hyperfine_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive hyperfine
      ansible.builtin.unarchive:
        src: "https://github.com/sharkdp/hyperfine/releases/download/v{{ hyperfine_version }}/hyperfine-v{{ hyperfine_version }}-{{ hyperfine_arch }}-{{ hyperfine_os }}.tar.gz"
        dest: "{{ hyperfine_tmp_directory }}/{{ hyperfine_os }}-{{ hyperfine_arch }}/"
        remote_src: true
        mode: 0755

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ hyperfine_tmp_directory }}/{{ hyperfine_os }}-{{ hyperfine_arch }}/hyperfine-v{{ hyperfine_version }}-{{ hyperfine_arch }}-{{ hyperfine_os }}/hyperfine"
        dest: "{{ hyperfine_bin_path }}/hyperfine"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ hyperfine_tmp_directory }}/{{ hyperfine_os }}-{{ hyperfine_arch }}"
