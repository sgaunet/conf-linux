---

- name: Check chglog version
  become: false
  ansible.builtin.shell: 'set -o pipefail && chglog version | sed "s#chglog ##g"'
  args:
    executable: /bin/bash
  register: chglog_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check chglog version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: chglog_version_client_installed.stdout != chglog_version
  check_mode: false

- name: Install chglog
  when:
    - not ansible_check_mode
    - chglog_version != chglog_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ chglog_tmp_directory }}/{{ chglog_os }}-{{ chglog_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive chglog
      ansible.builtin.unarchive:
        src: "https://github.com/goreleaser/chglog/releases/download/v{{ chglog_version }}/chglog_{{ chglog_version }}_{{ chglog_os }}_{{ chglog_arch }}.tar.gz"
        dest: "{{ chglog_tmp_directory }}/{{ chglog_os }}-{{ chglog_arch }}/"
        remote_src: true
        mode: 0755

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ chglog_tmp_directory }}/{{ chglog_os }}-{{ chglog_arch }}/chglog"
        dest: "{{ chglog_bin_path }}/chglog"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ chglog_tmp_directory }}/{{ chglog_os }}-{{ chglog_arch }}"
