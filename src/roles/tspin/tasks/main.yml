---

- name: Check tspin version
  become: false
  ansible.builtin.shell: 'set -o pipefail && tspin --version | sed "s#tspin ##g"'
  args:
    executable: /bin/bash
  register: tspin_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check tspin version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: tspin_version_client_installed.stdout != tspin_version
  check_mode: false

- name: Install tspin
  when:
    - not ansible_check_mode
    - tspin_version != tspin_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ tspin_tmp_directory }}/{{ tspin_os }}-{{ tspin_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive tspin
      ansible.builtin.unarchive:
        src: "https://github.com/bensadeh/tailspin/releases/download/{{ tspin_version }}/tailspin-{{ tspin_arch }}-{{ tspin_os }}.tar.gz"
        dest: "{{ tspin_tmp_directory }}/{{ tspin_os }}-{{ tspin_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ tspin_tmp_directory }}/{{ tspin_os }}-{{ tspin_arch }}/tspin"
        dest: "{{ tspin_bin_path }}/tspin"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ tspin_tmp_directory }}/{{ tspin_os }}-{{ tspin_arch }}"
