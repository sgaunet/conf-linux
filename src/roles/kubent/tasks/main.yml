---

- name: Check kubent version
  become: false
  ansible.builtin.shell: 'set -o pipefail && kubent -v 2>&1 | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,3})*)?[mGK]//g" | cut -f4 -d " " '
  args:
    executable: /bin/bash
  register: kubent_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

# - name: debug
#   ansible.builtin.debug:
#     msg: "{{ kubent_version_client_installed.stdout }}"

- name: Check kubent version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: kubent_version_client_installed.stdout != kubent_version
  check_mode: false

- name: Install kubent
  when:
    - not ansible_check_mode
    - kubent_version != kubent_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ kubent_tmp_directory }}/{{ kubent_os }}-{{ kubent_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive kubent
      ansible.builtin.unarchive:
        src: "https://github.com/doitintl/kube-no-trouble/releases/download/{{ kubent_version }}/kubent-{{ kubent_version }}-{{ kubent_os }}-{{ kubent_arch }}.tar.gz"
        dest: "{{ kubent_tmp_directory }}/{{ kubent_os }}-{{ kubent_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ kubent_tmp_directory }}/{{ kubent_os }}-{{ kubent_arch }}/kubent"
        dest: "{{ kubent_bin_path }}/kubent"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ kubent_tmp_directory }}/{{ kubent_os }}-{{ kubent_arch }}"
