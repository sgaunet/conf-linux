---

- name: Get delta version
  become: false
  ansible.builtin.shell: 'set -o pipefail && delta --version | sed "s#delta ##g" | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,3})*)?[mGK]//g" '
  args:
    executable: /bin/bash
  register: delta_version_installed
  changed_when: false
  failed_when: false
  check_mode: false

# - name: debug delta_version_installed
#   debug:
#     msg: "{{ delta_version_installed }}"

# - name: debug delta_version_installed.stdout
#   debug:
#     msg: "{{ delta_version_installed.stdout }}"
  
- name: Check delta version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: delta_version_installed.stdout != delta_version
  check_mode: false

- name: Install delta
  when:
    - not ansible_check_mode
    - delta_version != delta_version_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ delta_tmp_directory }}/{{ delta_os }}-{{ delta_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive delta
      ansible.builtin.unarchive:
        src: "https://github.com/dandavison/delta/releases/download/{{ delta_version }}/delta-{{ delta_version }}-{{ delta_arch }}-{{ delta_os }}.tar.gz"
        dest: "{{ delta_tmp_directory }}/{{ delta_os }}-{{ delta_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ delta_tmp_directory }}/{{ delta_os }}-{{ delta_arch }}/delta-{{ delta_version}}-{{ delta_arch }}-{{ delta_os }}/delta"
        dest: "{{ delta_bin_path }}/delta"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ delta_tmp_directory }}/{{ delta_os }}-{{ delta_arch }}"
