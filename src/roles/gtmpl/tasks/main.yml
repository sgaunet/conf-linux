---

- name: Check gtmpl version
  become: false
  ansible.builtin.shell: 'gtmpl -v'
  args:
    executable: /bin/bash
  register: gtmpl_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check gtmpl version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: gtmpl_version_client_installed.stdout != gtmpl_version
  check_mode: false

- name: Install gtmpl
  when:
    - not ansible_check_mode
    - gtmpl_version != gtmpl_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ gtmpl_tmp_directory }}/{{ gtmpl_os }}-{{ gtmpl_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive gtmpl
      ansible.builtin.unarchive:
        src: "https://github.com/sgaunet/gtmpl/releases/download/v{{ gtmpl_version }}/gtmpl_{{ gtmpl_os }}_{{ gtmpl_arch }}.tar.gz"
        dest: "{{ gtmpl_tmp_directory }}/{{ gtmpl_os }}-{{ gtmpl_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ gtmpl_tmp_directory }}/{{ gtmpl_os }}-{{ gtmpl_arch }}/gtmpl"
        dest: "{{ gtmpl_bin_path }}/gtmpl"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ gtmpl_tmp_directory }}/{{ gtmpl_os }}-{{ gtmpl_arch }}"

# - name: Setup my gtmpl-cfg repository
#   git:
#     repo: git@github.com:sgaunet/gtmpl-cfg.git
#     dest: "{{ lookup('env', 'HOME') }}/.gtmpl"
#     update: true
#   become: false
