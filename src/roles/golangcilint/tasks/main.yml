---

- name: Check golangcilint version
  become: false
  ansible.builtin.shell: "set -o pipefail && golangci-lint version  | cut -d' ' -f4 | sed 's/v//g'"
  args:
    executable: /bin/bash
  register: golangcilint_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check golangcilint version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: golangcilint_version_client_installed.stdout != golangcilint_version
  check_mode: false

# - debug:
#     var: golangcilint_version_client_installed.stdout

- name: Install golangcilint
  when:
    - not ansible_check_mode
    - golangcilint_version != golangcilint_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ golangcilint_tmp_directory }}/{{ golangcilint_os }}-{{ golangcilint_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive golangcilint
      ansible.builtin.unarchive:
        src: "https://github.com/golangci/golangci-lint/releases/download/v{{ golangcilint_version }}/golangci-lint-{{ golangcilint_version }}-{{ golangcilint_os }}-{{ golangcilint_arch }}.tar.gz"
        dest: "{{ golangcilint_tmp_directory }}/{{ golangcilint_os }}-{{ golangcilint_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ golangcilint_tmp_directory }}/{{ golangcilint_os }}-{{ golangcilint_arch }}/golangci-lint-{{ golangcilint_version }}-{{ golangcilint_os }}-{{ golangcilint_arch }}/golangci-lint"
        dest: "{{ golangcilint_bin_path }}/golangci-lint"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ golangcilint_tmp_directory }}/{{ golangcilint_os }}-{{ golangcilint_arch }}"
