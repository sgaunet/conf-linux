---

- name: Check vhs version
  become: false
  ansible.builtin.shell: "set -o pipefail && vhs -v  | cut -d' ' -f3 | sed 's#v##g'"
  args:
    executable: /bin/bash
  register: vhs_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check vhs version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: vhs_version_client_installed.stdout != vhs_version
  check_mode: false

# - debug:
#     var: vhs_version_client_installed.stdout

- name: Install vhs
  when:
    - not ansible_check_mode
    - vhs_version != vhs_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ vhs_tmp_directory }}/{{ vhs_os }}-{{ vhs_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive vhs
      ansible.builtin.unarchive:
        src: "https://github.com/charmbracelet/vhs/releases/download/v{{ vhs_version }}/vhs_{{ vhs_version }}_{{ vhs_os }}_{{ vhs_arch }}.tar.gz"
        dest: "{{ vhs_tmp_directory }}/{{ vhs_os }}-{{ vhs_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ vhs_tmp_directory }}/{{ vhs_os }}-{{ vhs_arch }}/vhs_{{ vhs_version }}_{{ vhs_os }}_{{ vhs_arch }}/vhs"
        dest: "{{ vhs_bin_path }}/vhs"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ vhs_tmp_directory }}/{{ vhs_os }}-{{ vhs_arch }}"
