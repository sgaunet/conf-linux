---

- name: Check gdu version
  shell: 'gdu -v | grep Version | sed "s#Version:[[:space:]]*v##g"'
  register: gdu_version_client_installed
  changed_when: false
  failed_when: false

- name: Create a directory if it does not exist
  file:
    path: "{{ gdu_tmp_directory }}/{{ gdu_os }}-{{ gdu_arch }}/"
    state: directory
    mode: '0755'
  when: gdu_version != gdu_version_client_installed.stdout


- name: Download and unarchive gdu
  unarchive:
    src: "https://github.com/dundee/gdu/releases/download/v{{ gdu_version }}/gdu_{{ gdu_os }}_{{ gdu_arch }}.tgz"
    dest: "{{ gdu_tmp_directory }}/{{ gdu_os }}-{{ gdu_arch }}/"
    remote_src: true
    mode: 0755
  when: gdu_version != gdu_version_client_installed.stdout


- name: Copy file with owner and permissions
  copy:
    src: "{{ gdu_tmp_directory }}/{{ gdu_os }}-{{ gdu_arch }}/gdu_{{ gdu_os }}_{{ gdu_arch }}"
    dest: "{{ gdu_bin_path }}/gdu"
    mode: '0755'
    remote_src: yes
  when: gdu_version != gdu_version_client_installed.stdout

- name: Clean temporary directory
  file:
    state: absent
    path: "{{ gdu_tmp_directory }}/{{ gdu_os }}-{{ gdu_arch }}"
  when: gdu_version != gdu_version_client_installed.stdout

