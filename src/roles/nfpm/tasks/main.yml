---

- name: Check nfpm version
  become: false
  ansible.builtin.shell: "set -o pipefail && nfpm -v | grep 'GitVersion' | awk '{ print $2 }'"
  args:
    executable: /bin/bash
  register: nfpm_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check nfpm version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: nfpm_version_client_installed.stdout != nfpm_version
  check_mode: false

- name: Install nfpm
  when:
    - not ansible_check_mode
    - nfpm_version != nfpm_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ nfpm_tmp_directory }}/{{ nfpm_os }}-{{ nfpm_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive nfpm
      ansible.builtin.unarchive:
        src: "https://github.com/goreleaser/nfpm/releases/download/v{{ nfpm_version }}/nfpm_{{ nfpm_version }}_{{ nfpm_os }}_{{ nfpm_arch }}.tar.gz"
        dest: "{{ nfpm_tmp_directory }}/{{ nfpm_os }}-{{ nfpm_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ nfpm_tmp_directory }}/{{ nfpm_os }}-{{ nfpm_arch }}/nfpm"
        dest: "{{ nfpm_bin_path }}/nfpm"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ nfpm_tmp_directory }}/{{ nfpm_os }}-{{ nfpm_arch }}"
