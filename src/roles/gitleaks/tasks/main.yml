---

- name: Check gitleaks version
  become: false
  ansible.builtin.command: "gitleaks version"
  register: gitleaks_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check gitleaks version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: gitleaks_version_client_installed.stdout != gitleaks_version
  check_mode: false

# - debug:
#     var: gitleaks_version_client_installed.stdout

- name: Install gitleaks
  when:
    - not ansible_check_mode
    - gitleaks_version != gitleaks_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ gitleaks_tmp_directory }}/{{ gitleaks_os }}-{{ gitleaks_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive gitleaks
      ansible.builtin.unarchive:
        src: "https://github.com/zricethezav/gitleaks/releases/download/v{{ gitleaks_version }}/gitleaks_{{ gitleaks_version }}_{{ gitleaks_os }}_{{ gitleaks_arch }}.tar.gz"
        dest: "{{ gitleaks_tmp_directory }}/{{ gitleaks_os }}-{{ gitleaks_arch }}/"
        remote_src: true
        mode: 0755

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ gitleaks_tmp_directory }}/{{ gitleaks_os }}-{{ gitleaks_arch }}/gitleaks"
        dest: "{{ gitleaks_bin_path }}/gitleaks"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ gitleaks_tmp_directory }}/{{ gitleaks_os }}-{{ gitleaks_arch }}"
