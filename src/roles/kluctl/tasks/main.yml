---

- name: Check kluctl version
  become: false
  ansible.builtin.shell: "kluctl version --no-color 2> /dev/null"
  register: kluctl_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check kluctl version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: kluctl_version_client_installed.stdout != kluctl_version
  check_mode: false

# - debug:
#     var: kluctl_version_client_installed.stdout

- name: Install kluctl
  when:
    - not ansible_check_mode
    - kluctl_version != kluctl_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ kluctl_tmp_directory }}/{{ kluctl_os }}-{{ kluctl_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive kluctl
      ansible.builtin.unarchive:
        src: "https://github.com/kluctl/kluctl/releases/download/v{{ kluctl_version }}/kluctl_v{{ kluctl_version }}_{{ kluctl_os }}_{{ kluctl_arch }}.tar.gz"
        dest: "{{ kluctl_tmp_directory }}/{{ kluctl_os }}-{{ kluctl_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ kluctl_tmp_directory }}/{{ kluctl_os }}-{{ kluctl_arch }}/kluctl"
        dest: "{{ kluctl_bin_path }}/kluctl"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ kluctl_tmp_directory }}/{{ kluctl_os }}-{{ kluctl_arch }}"
