---

- name: Check stern version
  become: false
  ansible.builtin.shell: "set -o pipefail && stern -v | grep version | cut -d' ' -f2"
  args:
    executable: /bin/bash
  register: stern_version_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check stern version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: stern_version_installed.stdout != stern_version
  check_mode: false

- name: Install stern
  when:
    - not ansible_check_mode
    - stern_version != stern_version_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ stern_tmp_directory }}/{{ stern_os }}-{{ stern_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive stern
      ansible.builtin.unarchive:
        src: "https://github.com/stern/stern/releases/download/v{{ stern_version }}/stern_{{ stern_version }}_{{ stern_os }}_{{ stern_arch }}.tar.gz"
        dest: "{{ stern_tmp_directory }}/{{ stern_os }}-{{ stern_arch }}/"
        remote_src: true
        mode: 0755

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ stern_tmp_directory }}/{{ stern_os }}-{{ stern_arch }}/stern"
        dest: "{{ stern_bin_path }}/stern"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ stern_tmp_directory }}/{{ stern_os }}-{{ stern_arch }}"
