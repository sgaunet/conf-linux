---

- name: Check moq version
  become: false
  ansible.builtin.shell: 'set -o pipefail && moq -version 2>&1| sed "s#moq version ##g"'
  args:
    executable: /bin/bash
  register: moq_version_client_installed
  changed_when: false
  failed_when: false
  check_mode: false

- name: Check moq version # noqa command-instead-of-shell
  ansible.builtin.shell: '/bin/true'
  changed_when: moq_version_client_installed.stdout != moq_version
  check_mode: false

- name: Install moq
  when:
    - not ansible_check_mode
    - moq_version != moq_version_client_installed.stdout
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ moq_tmp_directory }}/{{ moq_os }}-{{ moq_arch }}/"
        state: directory
        mode: '0755'

    - name: Download and unarchive moq
      ansible.builtin.unarchive:
        src: "https://github.com/matryer/moq/releases/download/v{{ moq_version }}/moq_{{ moq_os }}_{{ moq_arch }}.tar.gz"
        dest: "{{ moq_tmp_directory }}/{{ moq_os }}-{{ moq_arch }}/"
        remote_src: true
        mode: "0755"

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ moq_tmp_directory }}/{{ moq_os }}-{{ moq_arch }}/moq"
        dest: "{{ moq_bin_path }}/moq"
        mode: '0755'
        remote_src: true

    - name: Clean temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ moq_tmp_directory }}/{{ moq_os }}-{{ moq_arch }}"
